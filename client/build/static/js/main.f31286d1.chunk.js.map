{"version":3,"sources":["redux/actions/types.js","redux/reducers/game.js","redux/reducers/leaderBoard.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","components/Modal/Modal.js","components/Modal/index.js","components/Home/UserModal/index.js","components/Home/UserModal/UserModal.js","redux/actions/user.js","components/Home/index.js","components/Home/Home.js","components/Game/Header/index.js","components/Game/Header/Header.js","components/Game/LeaderBoard/index.js","components/Game/LeaderBoard/LeaderBoard.js","components/Game/Card/index.js","components/Game/useStyles.js","components/Game/index.js","components/Game/Game.js","App.js","theme.js","index.js"],"names":["SET_USER","SET_LEADERBOARD","initialState","username","savedGame","cards","defusingCard","played","win","loose","users","loading","combineReducers","game","state","action","type","payload","leaderBoard","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Boolean","window","location","hostname","match","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","outline","minWidth","padding","spacing","Modal","open","handleClose","children","classes","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","UserModal","connect","getSetUser","dispatch","a","fetch","method","headers","body","JSON","stringify","res","json","data","user","gamesPlayed","console","log","useState","setUsername","onSubmit","e","preventDefault","Typography","align","Box","my","TextField","label","id","size","value","fullWidth","onChange","target","required","Button","variant","Home","setOpen","bgcolor","height","color","flexWrap","textAlign","width","paddingY","xs","md","component","mt","paragraph","gutterBottom","onClick","Header","boxShadow","mb","px","py","FiberManualRecord","fontSize","LeaderBoard","getLeaderBoard","setUsers","useEffect","position","minHeight","pt","right","top","cursor","Refresh","gridGap","Divider","map","border","style","textTransform","_id","index","card","class","src","alt","root","left","bullet","margin","transform","title","Game","syncGameToDB","setCards","setDefusingCard","status","gameStatus","setGameStatus","startGame","GetCards","defusing","length","gameCards","i","Math","round","random","push","oldGameStatus","runGameLogic","leftCards","lastCard","pop","stats","setTimeout","setGameValues","gCards","gDefusing","gPlayed","gWin","gLoose","gStatus","Container","maxWidth","Grid","container","item","key","zIndex","el","document","querySelector","classList","add","drawCardHandler","Card","userName","setUserName","createMuiTheme","primary","main","secondary","error","red","A400","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f31286d1.chunk.js","sourcesContent":["export const SET_USER = 'SET_USER';\r\nexport const SET_LEADERBOARD = 'SET_LEADERBOARD';\r\n","import { SET_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  savedGame: { cards: [], defusingCard: 0 },\r\n  played: 0,\r\n  win: 0,\r\n  loose: 0,\r\n};\r\n\r\nexport default function game(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        username: payload.username,\r\n        savedGame: payload.savedGame,\r\n        played: payload.played,\r\n        win: payload.win,\r\n        loose: payload.loose,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_LEADERBOARD } from '../actions/types';\r\n\r\nconst initialState = { users: [], loading: true };\r\n\r\nexport default function alert(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_LEADERBOARD:\r\n      return { ...state, users: [...payload.users], loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport game from './game';\r\nimport leaderBoard from './leaderBoard';\r\n\r\nexport default combineReducers({ game, leaderBoard });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Fade, Backdrop, Modal } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    outline: 'none',\r\n    minWidth: '300px',\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst TransitionsModal = ({ open, handleClose, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"transition-modal-title\"\r\n      aria-describedby=\"transition-modal-description\"\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        <div className={classes.paper}>{children}</div>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransitionsModal;\r\n","import Modal from './Modal';\r\n\r\nexport default Modal;\r\n","import UserModal from './UserModal';\r\n\r\nexport default UserModal;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField, Button, Box, Typography } from '@material-ui/core';\r\n\r\nimport { getSetUser } from '../../../redux/actions/user';\r\n\r\nconst UserModal = ({ getSetUser }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    getSetUser(username);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <Typography align=\"center\">Enter A Username</Typography>\r\n      <Box my={5} minWidth=\"280px\">\r\n        <TextField\r\n          label=\"Username\"\r\n          id=\"standard-size-small\"\r\n          size=\"small\"\r\n          value={username}\r\n          fullWidth\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <Button type=\"submit\" variant=\"outlined\">\r\n          Play\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n};\r\n\r\nUserModal.propTypes = {\r\n  getSetUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { getSetUser })(UserModal);\r\n","import { SET_USER, SET_LEADERBOARD } from './types';\r\n\r\nexport const getSetUser = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(`/api/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: {\r\n        username,\r\n        savedGame: { ...data.user.savedGame },\r\n        win: data.user.win,\r\n        loose: data.user.loose,\r\n        played: data.user.gamesPlayed,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const syncGameToDB = (username, game, cards, defusingCard) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await fetch(`/api/user/${username}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        game,\r\n        cards,\r\n        defusingCard,\r\n      }),\r\n    });\r\n\r\n    // const data = await res.json();\r\n\r\n    // dispatch({\r\n    //   type: SET_USER,\r\n    //   payload: {\r\n    //     username,\r\n    //     savedGame: { ...data.user.savedGame },\r\n    //     win: data.user.win,\r\n    //     loose: data.user.loose,\r\n    //     played: data.user.gamesPlayed,\r\n    //   },\r\n    // });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getLeaderBoard = () => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(`/api/users`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SET_LEADERBOARD,\r\n      payload: {\r\n        users: data.users,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Typography } from '@material-ui/core';\r\nimport Modal from '../Modal';\r\n\r\nimport UserModal from './UserModal';\r\n\r\nconst Home = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Box\r\n      bgcolor=\"primary.main\"\r\n      height=\"100vh\"\r\n      color=\"white\"\r\n      flexWrap=\"wrap\"\r\n      textAlign=\"center\"\r\n    >\r\n      <Box width=\"100%\" paddingY={{ xs: 3, md: 8 }}>\r\n        <Typography component=\"h2\" variant=\"h3\">\r\n          The Exploding Kitten Game\r\n        </Typography>\r\n      </Box>\r\n      <Box width=\"100%\" mt=\"14vh\">\r\n        <Typography component=\"h2\" variant=\"h4\" paragraph>\r\n          Hey, Welcome\r\n        </Typography>\r\n        <br />\r\n        <br />\r\n        <Typography component=\"h3\" variant=\"h6\" gutterBottom>\r\n          Click here to start\r\n        </Typography>\r\n        <Button variant=\"contained\" size=\"large\" onClick={() => setOpen(true)}>\r\n          Let's Start\r\n        </Button>\r\n      </Box>\r\n\r\n      <Modal open={open} handleClose={() => setOpen(false)}>\r\n        <UserModal />\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { FiberManualRecord } from '@material-ui/icons';\r\n\r\nconst Header = ({ username }) => {\r\n  return (\r\n    <Box\r\n      boxShadow=\"0 1px 5px 1px rgba(0,0,0,0.25)\"\r\n      mb={4}\r\n      px={{ xs: 2, md: 5 }}\r\n      py={2}\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      bgcolor=\"#f0f0f0\"\r\n    >\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        The Exploding Kitten\r\n      </Typography>\r\n\r\n      <Typography component=\"div\">\r\n        <Box component=\"span\" px=\"2px\">\r\n          <FiberManualRecord color=\"secondary\" fontSize=\"small\" />\r\n        </Box>\r\n        <b>{username}</b>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import LeaderBoard from './LeaderBoard';\r\n\r\nexport default LeaderBoard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getLeaderBoard } from '../../../redux/actions/user';\r\nimport { Box, Button, Divider, Typography } from '@material-ui/core';\r\nimport { Refresh } from '@material-ui/icons';\r\n\r\nconst LeaderBoard = ({ leaderBoard, getLeaderBoard }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (leaderBoard.loading) {\r\n      getLeaderBoard();\r\n    } else {\r\n      setUsers([...leaderBoard.users]);\r\n    }\r\n  }, [leaderBoard, getLeaderBoard]);\r\n\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      boxShadow=\"0 0px 4px 0 rgba(0,0,0,0.12)\"\r\n      minHeight=\"60%\"\r\n      pt={2}\r\n    >\r\n      <Typography align=\"center\" paragraph>\r\n        <b>LeaderBoard</b>\r\n      </Typography>\r\n\r\n      <Box position=\"absolute\" right={0} top={16} cursor=\"pointer\">\r\n        <Button variant=\"text\" onClick={getLeaderBoard}>\r\n          <Refresh fontSize=\"small\" />\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box display=\"grid\" gridGap={5} mt={3}>\r\n        <Box mb={2}>\r\n          <Box px={2} py={1} display=\"flex\" justifyContent=\"space-between\">\r\n            <Typography>Username</Typography>\r\n            <Typography>Points</Typography>\r\n          </Box>\r\n          <Divider />\r\n        </Box>\r\n        {users.map((user) => (\r\n          <Box\r\n            boxShadow=\"0 1px 3px 0 rgba(0,0,0,0.1)\"\r\n            border=\"0.5px solid #eee\"\r\n            key={user._id}\r\n          >\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              style={{ textTransform: 'uppercase' }}\r\n            >\r\n              <Typography>{user.username}</Typography>\r\n              <Typography>{user.win}</Typography>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nLeaderBoard.propTypes = {\r\n  getLeaderBoard: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  leaderBoard: state.leaderBoard,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLeaderBoard })(LeaderBoard);\r\n","import React from 'react';\r\n\r\nconst index = ({ id, card }) => {\r\n  return (\r\n    <div class=\"card-scene\">\r\n      <div id={id} class=\"card\">\r\n        <div class=\"card-face card-backing\">\r\n          <div class=\"grain-overlay\"></div>\r\n\r\n          <div class=\"top-banner\">Click to Flip</div>\r\n          <div class=\"back-main\">\r\n            <div class=\"pipboy\">\r\n              <div class=\"twelve-point-star\"></div>\r\n              <img src=\"/images/cat_cover.png\" alt=\"card cover\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-face card-front\">\r\n          <h1>{card}</h1>\r\n          <div class=\"main-pane\">\r\n            <img class=\"slugger\" src={`/images/${card}.png`} alt=\"card front\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import Game from './Game';\r\n\r\nexport default Game;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n} from '@material-ui/core';\r\n\r\nimport Header from './Header';\r\nimport LeaderBoard from './LeaderBoard';\r\nimport Card from './Card';\r\n\r\nimport './Card/style.css';\r\n\r\nimport useStyles from './useStyles';\r\n\r\nimport { syncGameToDB } from '../../redux/actions/user';\r\n\r\nconst Game = ({ game, syncGameToDB }) => {\r\n  const classes = useStyles();\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [defusingCard, setDefusingCard] = useState(0);\r\n\r\n  const [gameStatus, setGameStatus] = useState({\r\n    played: 0,\r\n    win: 0,\r\n    loose: 0,\r\n    status: 'loading',\r\n  });\r\n\r\n  const { played, win, loose, status } = gameStatus;\r\n\r\n  const startGame = (game) => {\r\n    let GetCards = [];\r\n    let defusing = 0;\r\n\r\n    if (game?.savedGame && game?.savedGame?.cards?.length > 0) {\r\n      GetCards = [...game?.savedGame.cards];\r\n      defusing = game?.savedGame.defusingCard;\r\n    } else {\r\n      const gameCards = ['cat', 'bomb', 'defusing', 'shuffle'];\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const index = Math.round(Math.random() * 3);\r\n\r\n        GetCards.push(gameCards[index]);\r\n      }\r\n\r\n      setGameStatus((oldGameStatus) => ({\r\n        ...oldGameStatus,\r\n        status: 'running',\r\n      }));\r\n    }\r\n\r\n    setGameStatus((oldGameStatus) => ({\r\n      ...oldGameStatus,\r\n      played: game?.played || oldGameStatus?.played,\r\n      win: game?.win || oldGameStatus?.win,\r\n      loose: game?.loose || oldGameStatus?.loose,\r\n      status: 'running',\r\n    }));\r\n\r\n    setCards([...GetCards]);\r\n    setDefusingCard(defusing);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (game?.username) startGame(game);\r\n  }, [game]);\r\n\r\n  const drawCardHandler = (id) => {\r\n    const el = document.querySelector(`#${id}`);\r\n\r\n    console.log(el);\r\n\r\n    el.classList.add('card--flipped');\r\n\r\n    setTimeout(() => {\r\n      runGameLogic();\r\n    }, 800);\r\n  };\r\n\r\n  const runGameLogic = () => {\r\n    let leftCards = cards;\r\n    let lastCard = leftCards.pop();\r\n\r\n    const stats = {\r\n      defusingCard,\r\n      played,\r\n      win,\r\n      loose,\r\n      status,\r\n    };\r\n\r\n    if (lastCard === 'shuffle') {\r\n      stats.status = 'restarting';\r\n      stats.defusingCard = 0;\r\n\r\n      setTimeout(() => {\r\n        startGame();\r\n      }, 1000);\r\n    } else if (lastCard === 'defusing') {\r\n      stats.defusingCard++;\r\n    } else if (lastCard === 'bomb') {\r\n      if (defusingCard > 0) {\r\n        stats.defusingCard--;\r\n\r\n        lastCard = 'defusing';\r\n      } else {\r\n        stats.played++;\r\n        stats.loose++;\r\n        stats.status = 'loose';\r\n        stats.defusingCard = 0;\r\n      }\r\n    }\r\n\r\n    if (leftCards.length === 0 && lastCard !== 'bomb') {\r\n      stats.defusingCard = 0;\r\n      stats.played++;\r\n      stats.win++;\r\n      stats.status = 'win';\r\n    }\r\n\r\n    setGameValues(\r\n      leftCards,\r\n      stats.defusingCard,\r\n      stats.played,\r\n      stats.win,\r\n      stats.loose,\r\n      stats.status\r\n    );\r\n  };\r\n\r\n  const setGameValues = (gCards, gDefusing, gPlayed, gWin, gLoose, gStatus) => {\r\n    setCards([...gCards]);\r\n    setDefusingCard(gDefusing);\r\n    setGameStatus((oldGameStatus) => ({\r\n      ...oldGameStatus,\r\n      played: gPlayed,\r\n      win: gWin,\r\n      loose: gLoose,\r\n      status: gStatus,\r\n    }));\r\n    syncGameToDB(\r\n      game?.username,\r\n      {\r\n        played: gPlayed,\r\n        win: gWin,\r\n        loose: gLoose,\r\n      },\r\n      gStatus === 'running' ? gCards : [],\r\n      gDefusing\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Header username={game.username} />\r\n\r\n      <Container maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Box\r\n              position=\"relative\"\r\n              width=\"100%\"\r\n              minHeight=\"70vh\"\r\n              boxShadow=\"0 0px 4px 0 rgba(0,0,0,0.12)\"\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                {gameStatus.status === 'running' && (\r\n                  <Box position=\"relative\" width={285} height={290}>\r\n                    {cards.map((card, key) => (\r\n                      <Box\r\n                        className={classes.root}\r\n                        zIndex={key}\r\n                        key={key + card}\r\n                        onClick={() => drawCardHandler(card + key)}\r\n                      >\r\n                        <Card id={card + key} card={card} />\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n\r\n                <Box\r\n                  position=\"absolute\"\r\n                  top={0}\r\n                  left={0}\r\n                  right={0}\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  py={1}\r\n                  color=\"#fff\"\r\n                  bgcolor=\"#4d76a8\"\r\n                >\r\n                  {gameStatus.status === 'loose' ||\r\n                  gameStatus.status === 'win' ? (\r\n                    <Typography>\r\n                      You {status === 'win' ? 'won' : 'lost'}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography>{cards.length} cards left</Typography>\r\n                  )}\r\n                </Box>\r\n\r\n                {gameStatus.status === 'restarting' && (\r\n                  <Typography>Shuffling ...</Typography>\r\n                )}\r\n\r\n                {(gameStatus.status === 'loose' ||\r\n                  gameStatus.status === 'win') && (\r\n                  <Box>\r\n                    <Button onClick={() => startGame()} variant=\"contained\">\r\n                      Click Here to play Again\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Box boxShadow=\"0 0px 4px 0 rgba(0,0,0,0.12)\" mb={4} pt={2}>\r\n              <Typography paragraph align=\"center\">\r\n                <b>Game Stats</b>\r\n              </Typography>\r\n              <Box>\r\n                <Box\r\n                  px={4}\r\n                  py={2}\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Typography>{`Played : `}</Typography>\r\n                  <Typography>{gameStatus.played}</Typography>\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box\r\n                  px={4}\r\n                  py={2}\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Typography>{`Win : `}</Typography>\r\n                  <Typography>{gameStatus.win}</Typography>\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box\r\n                  px={4}\r\n                  py={2}\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Typography>{`Loose : `}</Typography>\r\n                  <Typography>{gameStatus.loose}</Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <LeaderBoard />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nGame.propTypes = {\r\n  syncGameToDB: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n});\r\n\r\nexport default connect(mapStateToProps, { syncGameToDB })(Game);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport Home from './components/Home';\r\nimport Game from './components/Game';\r\n\r\nimport './App.css';\r\n\r\nconst App = ({ game }) => {\r\n  const [userName, setUserName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setUserName(game?.username);\r\n  }, [game]);\r\n\r\n  return <Box>{userName ? <Game /> : <Home />}</Box>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#94A187',\r\n    },\r\n    secondary: {\r\n      main: '#01844d',\r\n    },\r\n    action: {\r\n      main: '#01844d',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        <CssBaseline />\r\n        <App />{' '}\r\n      </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}